// Copyright 2024, Giordano Salvador
// SPDX-License-Identifier: BSD-3-Clause

#ifndef __OPS_MLP__
#define __OPS_MLP__

include "mlir/dialect-mlp.td"
include "mlir/Interfaces/FunctionInterfaces.td"
include "mlir/Interfaces/InferTypeOpInterface.td"
include "mlir/Interfaces/SideEffectInterfaces.td"
include "mlir/IR/OpBase.td"
include "mlir/IR/SymbolInterfaces.td"

def ConstantOp : MlpOp<"constant", [Pure]> {
    let summary = "Constant operation";
    let description = [{
        Generates a constant tensor from the given attribute value.
        Outputs a result as a single SSA value.
        Example 2x3 tensor constant:

        ```mlir
        %0  = "mlp.constant"() {value = dense<[[1.0,2.0,3.0],[4.0,5.0,6.0]]> : tensor<2x3xf64>}
            : () -> tensor<2x3xf64>
        ```
    }];
    let arguments = (ins F64ElementsAttr:$value);
    let results = (outs F64Tensor);
    //let hasCustomAssemblyFormat = true;
    //let builders = [
    //    OpBuilder<(ins "DenseElementsAttr":$value),
    //        [{  // Call into autogenerated build:
    //            build($_builder, $_state, value.getType(), value);
    //        }]
    //    >,
    //    OpBuilder<(ins "double":$value)>
    //];
    let hasVerifier = true;
}

#endif // __OPS_MLP__
