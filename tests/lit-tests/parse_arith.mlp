// RUN: @mlpc -v=parser --parse -e "def test() { return; }"            2>&1 | @filecheck %s
// RUN: @mlpc -v=parser --parse -e "def test() { return 10; }"         2>&1 | @filecheck %s --check-prefixes=CHECK,CHECK_A
// RUN: @mlpc -v=parser --parse -e "def test() { return 10 - 8 * 3; }" 2>&1 | @filecheck %s --check-prefixes=CHECK,CHECK_B
// RUN: @mlpc -v=parser --parse -e "def test() { return 10 * 8 - 3; }" 2>&1 | @filecheck %s --check-prefixes=CHECK,CHECK_C

// CHECK:   Consumed expected token 'Def:def' at position '0'
// CHECK:   Consumed expected token 'Ident:test' at position '1'
// CHECK:   Consumed expected token 'ParenL:(' at position '2'
// CHECK:   Consumed expected token 'ParenR:)' at position '3'
// CHECK:   Consumed expected token 'BraceL:{' at position '4'
// CHECK:   Consumed expected token 'Return:return' at position '5'

// CHECK_A: Consumed expected token 'Number:10' at position '6'

// CHECK_B: Consumed expected token 'Number:10' at position '6'
// CHECK_B: Consumed expected token 'Minus:-' at position '7'
// CHECK_B: Consumed expected token 'Number:8' at position '8'
// CHECK_B: Consumed expected token 'Star:*' at position '9'
// CHECK_B: Consumed expected token 'Number:3' at position '10'

// CHECK_C: Consumed expected token 'Number:10' at position '6'
// CHECK_C: Consumed expected token 'Star:*' at position '7'
// CHECK_C: Consumed expected token 'Number:8' at position '8'
// CHECK_C: Consumed expected token 'Minus:-' at position '9'
// CHECK_C: Consumed expected token 'Number:3' at position '10'
