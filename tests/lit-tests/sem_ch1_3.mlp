// RUN: @mlpc --verbose=sem --sem %s 2>&1 | @filecheck %s
// COM: See original source at 'https://mlir.llvm.org/docs/Tutorials/Toy/Ch-1/'

// User defined generic function that operates on unknown shaped arguments.
def multiply_transpose(a, b) {
  return transpose(a) * transpose(b);
}

def main() {
  // Define a variable `a` with shape <2, 3>, initialized with the literal value.
  var a = [[1, 2, 3], [4, 5, 6]];
  var b<2, 3> = [1, 2, 3, 4, 5, 6];

  // This call will specialize `multiply_transpose` with <2, 3> for both
  // arguments and deduce a return type of <3, 2> in initialization of `c`.
  var c = multiply_transpose(a, b);

  // A second call to `multiply_transpose` with <2, 3> for both arguments will
  // reuse the previously specialized and inferred version and return <3, 2>.
  var d = multiply_transpose(b, a);

  // A new call with <3, 2> (instead of <2, 3>) for both dimensions will
  // trigger another specialization of `multiply_transpose`.
  var e = multiply_transpose(c, d);

  // Finally, calling into `multiply_transpose` with incompatible shapes
  // (<2, 3> and <3, 2>) will trigger a shape inference error.
  var f = multiply_transpose(a, c);
}

// CHECK: Running DeclCheck on module '[[SRC_PATH]]'
// CHECK: Added symbol 'a' to scope
// CHECK: Added symbol 'b' to scope
// CHECK: Found symbol 'transpose' in scope
// CHECK: Found symbol 'a' in scope
// CHECK: Found symbol 'transpose' in scope
// CHECK: Found symbol 'b' in scope
// CHECK: Removed symbol 'a' from scope
// CHECK: Removed symbol 'b' from scope
// CHECK: Added symbol 'multiply_transpose' to scope
// CHECK: Added symbol 'a' to scope
// CHECK: Added symbol 'b' to scope
// CHECK: Found symbol 'multiply_transpose' in scope
// CHECK: Found symbol 'a' in scope
// CHECK: Found symbol 'b' in scope
// CHECK: Added symbol 'c' to scope
// CHECK: Found symbol 'multiply_transpose' in scope
// CHECK: Found symbol 'b' in scope
// CHECK: Found symbol 'a' in scope
// CHECK: Added symbol 'd' to scope
// CHECK: Found symbol 'multiply_transpose' in scope
// CHECK: Found symbol 'c' in scope
// CHECK: Found symbol 'd' in scope
// CHECK: Added symbol 'e' to scope
// CHECK: Found symbol 'multiply_transpose' in scope
// CHECK: Found symbol 'a' in scope
// CHECK: Found symbol 'c' in scope
// CHECK: Added symbol 'f' to scope
// CHECK: Removed symbol 'a' from scope
// CHECK: Removed symbol 'b' from scope
// CHECK: Removed symbol 'c' from scope
// CHECK: Removed symbol 'd' from scope
// CHECK: Removed symbol 'e' from scope
// CHECK: Removed symbol 'f' from scope
// CHECK: Added symbol 'main' to scope
// CHECK: Removed symbol 'multiply_transpose' from scope
// CHECK: Removed symbol 'main' from scope

// CHECK: Running TypeCheck on module '[[SRC_PATH]]'
