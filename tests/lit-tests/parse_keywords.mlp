// RUN: not @mlpc --verbose=parser --parse -e "def def() { return; }"              2>&1 | @filecheck %s --check-prefix=CHECK_A
// RUN: not @mlpc --verbose=parser --parse -e "def return() { return; }"           2>&1 | @filecheck %s --check-prefix=CHECK_A
// RUN: not @mlpc --verbose=parser --parse -e "def var() { return; }"              2>&1 | @filecheck %s --check-prefix=CHECK_A

// RUN: not @mlpc --verbose=parser --parse -e "def test() { var def<> = [2]; }"    2>&1 | @filecheck %s --check-prefix=CHECK_B
// RUN: not @mlpc --verbose=parser --parse -e "def test() { var return<> = [2]; }" 2>&1 | @filecheck %s --check-prefix=CHECK_B
// RUN: not @mlpc --verbose=parser --parse -e "def test() { var var<> = [2]; }"    2>&1 | @filecheck %s --check-prefix=CHECK_B

// CHECK_A: Expected 'Ident' token at position '1'

// CHECK_B: Expected 'Ident' token at position '6'
