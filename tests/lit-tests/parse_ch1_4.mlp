// RUN: @mlpc -v=parser --parse %s 2>&1 | @filecheck %s
// COM: See original source at 'https://mlir.llvm.org/docs/Tutorials/Toy/Ch-1/'

// User defined generic function that operates on unknown shaped arguments.
def multiply_transpose(a, b) {
  return transpose(a) * transpose(b);
}

def main() {
    // Define a variable `a` with shape <2, 3>, initialized with the literal value.
    var a = [[1, 2, 3], [4, 5, 6]];
    var b<2, 3> = [1, 2, 3, 4, 5, 6];

    // This call will specialize `multiply_transpose` with <2, 3> for both
    // arguments and deduce a return type of <3, 2> in initialization of `c`.
    var c = multiply_transpose(a, b);

    // A second call to `multiply_transpose` with <2, 3> for both arguments will
    // reuse the previously specialized and inferred version and return <3, 2>.
    var d = multiply_transpose(b, a);

    // A new call with <3, 2> (instead of <2, 3>) for both dimensions will
    // trigger another specialization of `multiply_transpose`.
    var e = multiply_transpose(c, d);
}

// CHECK: Consumed expected token 'Def:def' at position '0'
// CHECK: Consumed expected token 'Ident:multiply_transpose' at position '1'
// CHECK: Consumed expected token 'ParenL:(' at position '2'
// CHECK: Consumed expected token 'Ident:a' at position '3'
// CHECK: Consumed expected token 'Comma:,' at position '4'
// CHECK: Consumed expected token 'Ident:b' at position '5'
// CHECK: Consumed expected token 'ParenR:)' at position '6'
// CHECK: Consumed expected token 'BraceL:{' at position '7'
// CHECK: Consumed expected token 'Return:return' at position '8'
// CHECK: Consumed expected token 'Transpose:transpose' at position '9'
// CHECK: Consumed expected token 'ParenL:(' at position '10'
// CHECK: Consumed expected token 'Ident:a' at position '11'
// CHECK: Consumed expected token 'ParenR:)' at position '12'
// CHECK: Consumed expected token 'Star:*' at position '13'
// CHECK: Consumed expected token 'Transpose:transpose' at position '14'
// CHECK: Consumed expected token 'ParenL:(' at position '15'
// CHECK: Consumed expected token 'Ident:b' at position '16'
// CHECK: Consumed expected token 'ParenR:)' at position '17'
// CHECK: Consumed expected token 'Semicolon:;' at position '18'
// CHECK: Consumed expected token 'BraceR:}' at position '19'
// CHECK: Consumed expected token 'Def:def' at position '20'
// CHECK: Consumed expected token 'Ident:main' at position '21'
// CHECK: Consumed expected token 'ParenL:(' at position '22'
// CHECK: Consumed expected token 'ParenR:)' at position '23'
// CHECK: Consumed expected token 'BraceL:{' at position '24'
// CHECK: Consumed expected token 'Var:var' at position '25'
// CHECK: Consumed expected token 'Ident:a' at position '26'
// CHECK: Consumed expected token 'Assign:=' at position '27'
// CHECK: Consumed expected token 'BracketL:[' at position '28'
// CHECK: Consumed expected token 'BracketL:[' at position '29'
// CHECK: Consumed expected token 'Number:1' at position '30'
// CHECK: Consumed expected token 'Comma:,' at position '31'
// CHECK: Consumed expected token 'Number:2' at position '32'
// CHECK: Consumed expected token 'Comma:,' at position '33'
// CHECK: Consumed expected token 'Number:3' at position '34'
// CHECK: Consumed expected token 'BracketR:]' at position '35'
// CHECK: Consumed expected token 'Comma:,' at position '36'
// CHECK: Consumed expected token 'BracketL:[' at position '37'
// CHECK: Consumed expected token 'Number:4' at position '38'
// CHECK: Consumed expected token 'Comma:,' at position '39'
// CHECK: Consumed expected token 'Number:5' at position '40'
// CHECK: Consumed expected token 'Comma:,' at position '41'
// CHECK: Consumed expected token 'Number:6' at position '42'
// CHECK: Consumed expected token 'BracketR:]' at position '43'
// CHECK: Consumed expected token 'BracketR:]' at position '44'
// CHECK: Consumed expected token 'Semicolon:;' at position '45'
// CHECK: Consumed expected token 'Var:var' at position '46'
// CHECK: Consumed expected token 'Ident:b' at position '47'
// CHECK: Consumed expected token 'AngleL:<' at position '48'
// CHECK: Consumed expected token 'Number:2' at position '49'
// CHECK: Consumed expected token 'Comma:,' at position '50'
// CHECK: Consumed expected token 'Number:3' at position '51'
// CHECK: Consumed expected token 'AngleR:>' at position '52'
// CHECK: Consumed expected token 'Assign:=' at position '53'
// CHECK: Consumed expected token 'BracketL:[' at position '54'
// CHECK: Consumed expected token 'Number:1' at position '55'
// CHECK: Consumed expected token 'Comma:,' at position '56'
// CHECK: Consumed expected token 'Number:2' at position '57'
// CHECK: Consumed expected token 'Comma:,' at position '58'
// CHECK: Consumed expected token 'Number:3' at position '59'
// CHECK: Consumed expected token 'Comma:,' at position '60'
// CHECK: Consumed expected token 'Number:4' at position '61'
// CHECK: Consumed expected token 'Comma:,' at position '62'
// CHECK: Consumed expected token 'Number:5' at position '63'
// CHECK: Consumed expected token 'Comma:,' at position '64'
// CHECK: Consumed expected token 'Number:6' at position '65'
// CHECK: Consumed expected token 'BracketR:]' at position '66'
// CHECK: Consumed expected token 'Semicolon:;' at position '67'
// CHECK: Consumed expected token 'Var:var' at position '68'
// CHECK: Consumed expected token 'Ident:c' at position '69'
// CHECK: Consumed expected token 'Assign:=' at position '70'
// CHECK: Consumed expected token 'Ident:multiply_transpose' at position '71'
// CHECK: Consumed expected token 'ParenL:(' at position '72'
// CHECK: Consumed expected token 'Ident:a' at position '73'
// CHECK: Consumed expected token 'Comma:,' at position '74'
// CHECK: Consumed expected token 'Ident:b' at position '75'
// CHECK: Consumed expected token 'ParenR:)' at position '76'
// CHECK: Consumed expected token 'Semicolon:;' at position '77'
// CHECK: Consumed expected token 'Var:var' at position '78'
// CHECK: Consumed expected token 'Ident:d' at position '79'
// CHECK: Consumed expected token 'Assign:=' at position '80'
// CHECK: Consumed expected token 'Ident:multiply_transpose' at position '81'
// CHECK: Consumed expected token 'ParenL:(' at position '82'
// CHECK: Consumed expected token 'Ident:b' at position '83'
// CHECK: Consumed expected token 'Comma:,' at position '84'
// CHECK: Consumed expected token 'Ident:a' at position '85'
// CHECK: Consumed expected token 'ParenR:)' at position '86'
// CHECK: Consumed expected token 'Semicolon:;' at position '87'
// CHECK: Consumed expected token 'Var:var' at position '88'
// CHECK: Consumed expected token 'Ident:e' at position '89'
// CHECK: Consumed expected token 'Assign:=' at position '90'
// CHECK: Consumed expected token 'Ident:multiply_transpose' at position '91'
// CHECK: Consumed expected token 'ParenL:(' at position '92'
// CHECK: Consumed expected token 'Ident:c' at position '93'
// CHECK: Consumed expected token 'Comma:,' at position '94'
// CHECK: Consumed expected token 'Ident:d' at position '95'
// CHECK: Consumed expected token 'ParenR:)' at position '96'
// CHECK: Consumed expected token 'Semicolon:;' at position '97'
// CHECK: Consumed expected token 'BraceR:}' at position '98'
// CHECK: Consumed expected token 'Eoi:' at position '99'
